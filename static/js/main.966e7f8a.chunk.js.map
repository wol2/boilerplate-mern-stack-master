{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","style","background","image","height","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","overview","GridCards","landingPage","lg","md","xs","href","movieId","src","alt","movieName","characterName","LandingPage","useState","Movies","setMovies","MainMovieImage","setMainMovieImage","CurrentPage","setCurrentPage","endpoint","fetchMovies","fetch","json","results","page","margin","backdrop_path","original_title","gutter","map","movie","index","Fragment","key","poster_path","id","display","justifyContent","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","MovieInfo","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","Favorite","userFrom","movieTitle","movieInfo","moviePost","movieRunTime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","variables","Axios","favoriteNumber","favorited","MovieDetail","match","params","Movie","setMovie","Casts","setCasts","ActorToggle","setActorToggle","endpointCrew","endpointInfo","cast","profile_path","FavoritePage","Favorites","setFavorites","fetchFavoriteMovie","favorites","renderCards","favorite","content","onClickDelete","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.966e7f8a.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = \"/api/users\";\n\nexport const API_URL = \"https://api.themoviedb.org/3/\";\n\nexport const API_KEY = \"1cd8899f35d35647d7dda12f571ea49d\";\n\nexport const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from \"react\";\r\n\r\nfunction MainImage(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        background: `url('${props.image}')`,\r\n        height: \"500px\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            maxWidth: \"500px\",\r\n            bottom: \"2rem\",\r\n            marginLeft: \"2rem\",\r\n          }}\r\n        >\r\n          <h2 style={{ color: \"white\" }}>{props.title}</h2>\r\n          <p style={{ color: \"white\", fontSize: \"1rem\" }}>{props.overview}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainImage;\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\n\r\nfunction GridCards(props) {\r\n  if (props.landingPage) {\r\n    return (\r\n      <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: \"relative\" }}>\r\n          <a href={`/movie/${props.movieId}`}>\r\n            <img\r\n              style={{ width: \"100%\", height: \"320px\" }}\r\n              src={props.image}\r\n              alt={props.movieName}\r\n            />\r\n          </a>\r\n        </div>\r\n      </Col>\r\n    );\r\n  } else {\r\n    return (\r\n      <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: \"relative\" }}>\r\n          <img\r\n            style={{ width: \"100%\", height: \"320px\" }}\r\n            src={props.image}\r\n            alt={props.characterName}\r\n          />\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridCards;\r\n","import React, { useEffect, useState } from \"react\";\n// import { FaCode } from \"react-icons/fa\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from \"../../Config\";\nimport MainImage from \"./Sections/MainImage\";\nimport GridCards from \"../commons/GridCards\";\nimport { Row } from \"antd\";\n\nfunction LandingPage() {\n  const [Movies, setMovies] = useState([]);\n  const [MainMovieImage, setMainMovieImage] = useState(null);\n  const [CurrentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchMovies(endpoint);\n  }, []);\n\n  const fetchMovies = (endpoint) => {\n    fetch(endpoint)\n      .then((response) => response.json())\n      .then((response) => {\n        setMovies([...Movies, ...response.results]);\n        setMainMovieImage(response.results[6]);\n        setCurrentPage(response.page);\n      });\n  };\n\n  const loadMoreItems = () => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\n      CurrentPage + 1\n    }`;\n    fetchMovies(endpoint);\n  };\n\n  return (\n    <div style={{ width: \"100%\", margin: \"0\" }}>\n      {/* Main Iamge*/}\n      {MainMovieImage && (\n        <MainImage\n          image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n          title={MainMovieImage.original_title}\n          overview={MainMovieImage.overview}\n        />\n      )}\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\n        <h2>Movies by latest</h2>\n        <hr />\n        {/* Main Gift Cards*/}\n        <Row gutter={[16, 16]}>\n          {Movies &&\n            Movies.map((movie, index) => (\n              <React.Fragment key={index}>\n                <GridCards\n                  landingPage\n                  image={\n                    movie.poster_path\n                      ? `${IMAGE_BASE_URL}w500${movie.poster_path}`\n                      : null\n                  }\n                  movieId={movie.id}\n                  movieName={movie.original_title}\n                />\n              </React.Fragment>\n            ))}\n        </Row>\n      </div>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <button onClick={loadMoreItems}>Load More</button>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport { Menu } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"favorite\">\n        <a href=\"/favorite\">favorite</a>\n      </Menu.Item>\n      <SubMenu title={<span>Blogs</span>}>\n        <MenuItemGroup title=\"Item 1\">\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n        </MenuItemGroup>\n        <MenuItemGroup title=\"Item 2\">\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n        </MenuItemGroup>\n      </SubMenu>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from \"react\";\nimport { Icon } from \"antd\";\n\nfunction Footer() {\n  return (\n    <div\n      style={{\n        height: \"80px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"1rem\",\n      }}\n    ></div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\r\nimport { Descriptions } from \"antd\";\r\n\r\nfunction MovieInfo(props) {\r\n  let { movie } = props;\r\n\r\n  return (\r\n    <Descriptions title=\"Movie Info\" bordered>\r\n      <Descriptions.Item label=\"Title\">\r\n        {movie.original_title}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"release_date\">\r\n        {movie.release_date}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\r\n      <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\r\n      <Descriptions.Item label=\"vote_average\" span={2}>\r\n        {movie.vote_average}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"vote_count\">\r\n        {movie.vote_count}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\r\n      <Descriptions.Item label=\"popularity\">\r\n        {movie.popularity}\r\n      </Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"antd\";\r\n\r\nfunction Favorite(props) {\r\n  const movieId = props.movieId;\r\n  const userFrom = props.userFrom;\r\n  const movieTitle = props.movieInfo.title;\r\n  const moviePost = props.movieInfo.backdrop_path;\r\n  const movieRunTime = props.movieInfo.runtime;\r\n\r\n  const [FavoriteNumber, setFavoriteNumber] = useState(0);\r\n  const [Favorited, setFavorited] = useState(false);\r\n  let variables = {\r\n    userFrom,\r\n    movieId,\r\n    movieTitle,\r\n    moviePost,\r\n    movieRunTime,\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/favorite/favoriteNumber\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setFavoriteNumber(response.data.favoriteNumber);\r\n      } else {\r\n        alert(\"숫자 정보를 가져오는데 실패 했습니다.\");\r\n      }\r\n    });\r\n\r\n    Axios.post(\"/api/favorite/favorited\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setFavorited(response.data.favorited);\r\n      } else {\r\n        alert(\"숫자 정보를 가져오는데 실패 했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onClickFavorite = () => {\r\n    if (Favorited) {\r\n      Axios.post(\"/api/favorite/removeFromFavorite\", variables).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            setFavoriteNumber(FavoriteNumber - 1);\r\n            setFavorited(!Favorited);\r\n          } else {\r\n            alert(\"Favorite 리스트에서 지우는 걸 실패했습니다.\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      Axios.post(\"/api/favorite/addFromFavorite\", variables).then(\r\n        (response) => {\r\n          if (response.data.success) {\r\n            setFavoriteNumber(FavoriteNumber + 1);\r\n            setFavorited(!Favorited);\r\n          } else {\r\n            alert(\"Favorite 리스트에 추가하는 걸 실패했습니다.\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={onClickFavorite}>\r\n        {Favorited ? \"Not Favorite\" : \"Add to Favorite\"}\r\n        {FavoriteNumber}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from \"../../Config\";\r\nimport MainImage from \"../LandingPage/Sections/MainImage\";\r\nimport MovieInfo from \"./Sections/MovieInfo\";\r\nimport GridCards from \"../commons/GridCards\";\r\nimport Favorite from \"./Sections/Favorite\";\r\nimport { Row } from \"antd\";\r\n\r\nfunction MovieDetail(props) {\r\n  let movieId = props.match.params.movieId;\r\n  const [Movie, setMovie] = useState([]);\r\n  const [Casts, setCasts] = useState([]);\r\n  const [ActorToggle, setActorToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    let endpointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n\r\n    fetch(endpointInfo)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setMovie(response);\r\n      });\r\n\r\n    fetch(endpointCrew)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setCasts(response.cast);\r\n      });\r\n  }, []);\r\n\r\n  const toggleActorView = () => {\r\n    setActorToggle(!ActorToggle);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <MainImage\r\n        image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`}\r\n        title={Movie.original_title}\r\n        overview={Movie.overview}\r\n      />\r\n\r\n      {/* Body */}\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Favorite\r\n            movieInfo={Movie}\r\n            movieId={movieId}\r\n            userFrom={localStorage.getItem(\"userId\")}\r\n          />\r\n        </div>\r\n\r\n        {/* Movie Info */}\r\n        <MovieInfo movie={Movie} />\r\n\r\n        <br />\r\n        {/* Actors Grid */}\r\n\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\", margin: \"2rem\" }}\r\n        >\r\n          <button onClick={toggleActorView}>Toggle Actor View</button>\r\n        </div>\r\n\r\n        {ActorToggle && (\r\n          <Row gutter={[16, 16]}>\r\n            {Casts &&\r\n              Casts.map((cast, index) => (\r\n                <React.Fragment key={index}>\r\n                  <GridCards\r\n                    image={\r\n                      cast.profile_path\r\n                        ? `${IMAGE_BASE_URL}w500${cast.profile_path}`\r\n                        : null\r\n                    }\r\n                    characterName={cast.name}\r\n                  />\r\n                </React.Fragment>\r\n              ))}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./FavoritePage.css\";\r\nimport Axios from \"axios\";\r\nimport { Popover } from \"antd\";\r\nimport { IMAGE_BASE_URL } from \"../../Config\";\r\n\r\nfunction FavoritePage() {\r\n  const [Favorites, setFavorites] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchFavoriteMovie();\r\n  }, []);\r\n\r\n  const fetchFavoriteMovie = () => {\r\n    Axios.post(\"/api/favorite/getFavoritedMovie\", {\r\n      userFrom: localStorage.getItem(\"userId\"),\r\n    }).then((response) => {\r\n      if (response.data.success) {\r\n        setFavorites(response.data.favorites);\r\n      } else {\r\n        alert(\"영화 정보를 가져오는데 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickDelete = (movieId, userFrom) => {\r\n    const variables = {\r\n      movieId,\r\n      userFrom,\r\n    };\r\n\r\n    Axios.post(\"/api/favorite/removeFromFavorite\", variables).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          fetchFavoriteMovie();\r\n        } else {\r\n          alert(\"리스트에서 지우는데 실패했습니다.\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const renderCards =\r\n    Favorites &&\r\n    Favorites.map((favorite, index) => {\r\n      const content = (\r\n        <div>\r\n          {favorite.moviePost ? (\r\n            <img src={`${IMAGE_BASE_URL}w500${favorite.moviePost}`} />\r\n          ) : (\r\n            \"no image\"\r\n          )}\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <tr key={index}>\r\n          <Popover content={content} title={`${favorite.movieTitle}`}>\r\n            <td>{favorite.movieTitle}</td>\r\n          </Popover>\r\n          <td>{favorite.movieRunTime} mins</td>\r\n          <td>\r\n            <button\r\n              onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      <h2>Favorite Movies</h2>\r\n      <hr />\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td>Movie Title</td>\r\n            <td>Movie RunTimes</td>\r\n            <td>Remove from Favorites</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderCards}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport MovieDetail from \"./views/MovieDetail/MovieDetail\";\nimport FavoritePage from \"./views/FavoritePage/FavoritePage\";\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route\n            exact\n            path=\"/movie/:movieId\"\n            component={Auth(MovieDetail, null)}\n          />\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}